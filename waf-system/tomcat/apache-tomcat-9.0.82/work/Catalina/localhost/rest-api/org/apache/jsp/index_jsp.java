/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2025-09-23 17:41:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>REST API Testing Interface</title>\n");
      out.write("    <style>\n");
      out.write("        * {\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        body {\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("            line-height: 1.6;\n");
      out.write("            color: #333;\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("            min-height: 100vh;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .container {\n");
      out.write("            max-width: 1200px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .header {\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            padding: 30px;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            box-shadow: 0 8px 32px rgba(0,0,0,0.1);\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .header h1 {\n");
      out.write("            color: #2c3e50;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("            font-size: 2.5em;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .header p {\n");
      out.write("            color: #7f8c8d;\n");
      out.write("            font-size: 1.2em;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .api-section {\n");
      out.write("            background: rgba(255, 255, 255, 0.95);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border-radius: 15px;\n");
      out.write("            padding: 25px;\n");
      out.write("            margin-bottom: 25px;\n");
      out.write("            box-shadow: 0 8px 32px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .api-section h2 {\n");
      out.write("            color: #2c3e50;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("            padding-bottom: 10px;\n");
      out.write("            border-bottom: 3px solid #3498db;\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 10px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .api-grid {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n");
      out.write("            gap: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .endpoint-card {\n");
      out.write("            background: #f8f9fa;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            padding: 20px;\n");
      out.write("            border-left: 4px solid #3498db;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .endpoint-card:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 5px 20px rgba(0,0,0,0.1);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .endpoint-card h3 {\n");
      out.write("            color: #2c3e50;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("            font-size: 1.3em;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .endpoint-card p {\n");
      out.write("            color: #7f8c8d;\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .method-tag {\n");
      out.write("            display: inline-block;\n");
      out.write("            padding: 4px 8px;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            font-size: 0.8em;\n");
      out.write("            font-weight: bold;\n");
      out.write("            margin-right: 8px;\n");
      out.write("            margin-bottom: 5px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .method-get { background: #27ae60; color: white; }\n");
      out.write("        .method-post { background: #f39c12; color: white; }\n");
      out.write("        .method-put { background: #8e44ad; color: white; }\n");
      out.write("        .method-delete { background: #e74c3c; color: white; }\n");
      out.write("        .method-options { background: #95a5a6; color: white; }\n");
      out.write("        \n");
      out.write("        .test-form {\n");
      out.write("            background: #ecf0f1;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 15px;\n");
      out.write("            margin-top: 15px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group label {\n");
      out.write("            display: block;\n");
      out.write("            margin-bottom: 5px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #2c3e50;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group input,\n");
      out.write("        .form-group select,\n");
      out.write("        .form-group textarea {\n");
      out.write("            width: 100%;\n");
      out.write("            padding: 10px;\n");
      out.write("            border: 1px solid #bdc3c7;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-size: 14px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group textarea {\n");
      out.write("            resize: vertical;\n");
      out.write("            min-height: 100px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn {\n");
      out.write("            background: #3498db;\n");
      out.write("            color: white;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            font-size: 14px;\n");
      out.write("            transition: background 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn:hover {\n");
      out.write("            background: #2980b9;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-success { background: #27ae60; }\n");
      out.write("        .btn-success:hover { background: #229954; }\n");
      out.write("        \n");
      out.write("        .btn-warning { background: #f39c12; }\n");
      out.write("        .btn-warning:hover { background: #d68910; }\n");
      out.write("        \n");
      out.write("        .btn-danger { background: #e74c3c; }\n");
      out.write("        .btn-danger:hover { background: #c0392b; }\n");
      out.write("        \n");
      out.write("        .response-area {\n");
      out.write("            background: #2c3e50;\n");
      out.write("            color: #ecf0f1;\n");
      out.write("            padding: 15px;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            font-family: 'Courier New', monospace;\n");
      out.write("            margin-top: 15px;\n");
      out.write("            min-height: 100px;\n");
      out.write("            white-space: pre-wrap;\n");
      out.write("            overflow-x: auto;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .auth-section {\n");
      out.write("            background: #fff3cd;\n");
      out.write("            border: 1px solid #ffeaa7;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            padding: 15px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .auth-section h4 {\n");
      out.write("            color: #856404;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .auth-info {\n");
      out.write("            font-size: 14px;\n");
      out.write("            color: #856404;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .feature-grid {\n");
      out.write("            display: grid;\n");
      out.write("            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n");
      out.write("            gap: 20px;\n");
      out.write("            margin-top: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .feature-card {\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("            color: white;\n");
      out.write("            padding: 20px;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            text-align: center;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .feature-card h4 {\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("            font-size: 1.2em;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .feature-card p {\n");
      out.write("            font-size: 0.9em;\n");
      out.write("            opacity: 0.9;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .emoji {\n");
      out.write("            font-size: 1.5em;\n");
      out.write("            margin-right: 8px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .demo-btn {\n");
      out.write("            margin: 5px;\n");
      out.write("            padding: 8px 16px;\n");
      out.write("            border: 1px solid #3498db;\n");
      out.write("            background: white;\n");
      out.write("            color: #3498db;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            font-size: 12px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .demo-btn:hover {\n");
      out.write("            background: #3498db;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"header\">\n");
      out.write("            <h1><span class=\"emoji\">🚀</span>REST API Testing Interface</h1>\n");
      out.write("            <p>Comprehensive REST API for task management, user authentication, and analytics</p>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <div class=\"auth-section\">\n");
      out.write("            <h4><span class=\"emoji\">🔐</span>Authentication Information</h4>\n");
      out.write("            <div class=\"auth-info\">\n");
      out.write("                <p><strong>Demo Credentials:</strong></p>\n");
      out.write("                <ul style=\"margin-left: 20px;\">\n");
      out.write("                    <li>Username: <code>admin</code>, Password: <code>admin123</code> (Admin Role)</li>\n");
      out.write("                    <li>Username: <code>john_doe</code>, Password: <code>user123</code> (User Role)</li>\n");
      out.write("                </ul>\n");
      out.write("                <p><strong>Demo API Keys:</strong></p>\n");
      out.write("                <ul style=\"margin-left: 20px;\">\n");
      out.write("                    <li>Admin Key: <code>demo-api-key-admin</code></li>\n");
      out.write("                    <li>User Key: <code>demo-api-key-user</code></li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Authentication API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">🔑</span>Authentication API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Login</h3>\n");
      out.write("                    <p>Authenticate user and get session token</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/auth/login</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"loginBody\">{\"username\": \"admin\", \"password\": \"admin123\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testLogin()\">Test Login</button>\n");
      out.write("                        <div id=\"loginResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Register</h3>\n");
      out.write("                    <p>Register new user account</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/auth/register</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"registerBody\">{\"username\": \"newuser\", \"password\": \"password123\", \"email\": \"new@example.com\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testRegister()\">Test Register</button>\n");
      out.write("                        <div id=\"registerResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Validate Token</h3>\n");
      out.write("                    <p>Validate authentication token</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/auth/validate</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Authorization Header:</label>\n");
      out.write("                            <input type=\"text\" id=\"validateToken\" placeholder=\"Bearer token_admin_...\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testValidate()\">Test Validate</button>\n");
      out.write("                        <div id=\"validateResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Tasks API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">📋</span>Tasks API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>List Tasks</h3>\n");
      out.write("                    <p>Get all tasks with filtering and pagination</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/tasks</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Query Parameters:</label>\n");
      out.write("                            <input type=\"text\" id=\"tasksQuery\" placeholder=\"status=IN_PROGRESS&priority=HIGH&page=1\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testListTasks()\">Test List Tasks</button>\n");
      out.write("                        <div id=\"tasksResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Create Task</h3>\n");
      out.write("                    <p>Create a new task</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/tasks</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"createTaskBody\">{\"title\": \"New API Task\", \"description\": \"Test task from API\", \"priority\": \"HIGH\", \"assignee\": \"john_doe\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testCreateTask()\">Test Create</button>\n");
      out.write("                        <div id=\"createTaskResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Update Task</h3>\n");
      out.write("                    <p>Update existing task</p>\n");
      out.write("                    <span class=\"method-tag method-put\">PUT</span>\n");
      out.write("                    <code>/api/tasks/{id}</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Task ID:</label>\n");
      out.write("                            <input type=\"text\" id=\"updateTaskId\" value=\"1\" />\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"updateTaskBody\">{\"status\": \"COMPLETED\", \"priority\": \"LOW\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testUpdateTask()\">Test Update</button>\n");
      out.write("                        <div id=\"updateTaskResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Users API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">👥</span>Users API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>List Users</h3>\n");
      out.write("                    <p>Get all users with filtering</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/users</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Query Parameters:</label>\n");
      out.write("                            <input type=\"text\" id=\"usersQuery\" placeholder=\"role=USER&status=active&search=john\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testListUsers()\">Test List Users</button>\n");
      out.write("                        <div id=\"usersResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Create User</h3>\n");
      out.write("                    <p>Create new user</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/users</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"createUserBody\">{\"username\": \"apiuser\", \"email\": \"api@example.com\", \"fullName\": \"API Test User\", \"password\": \"test123\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testCreateUser()\">Test Create User</button>\n");
      out.write("                        <div id=\"createUserResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Get User Details</h3>\n");
      out.write("                    <p>Get specific user by ID</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/users/{id}</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>User ID:</label>\n");
      out.write("                            <input type=\"text\" id=\"getUserId\" value=\"1\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testGetUser()\">Test Get User</button>\n");
      out.write("                        <div id=\"getUserResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Projects API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">🏗️</span>Projects API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>List Projects</h3>\n");
      out.write("                    <p>Get all projects with sorting and filtering</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/projects</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Query Parameters:</label>\n");
      out.write("                            <input type=\"text\" id=\"projectsQuery\" placeholder=\"status=IN_PROGRESS&sortBy=priority&sortOrder=desc\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testListProjects()\">Test List Projects</button>\n");
      out.write("                        <div id=\"projectsResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Create Project</h3>\n");
      out.write("                    <p>Create new project</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/projects</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Request Body:</label>\n");
      out.write("                            <textarea id=\"createProjectBody\">{\"name\": \"API Test Project\", \"description\": \"Project created via API\", \"priority\": \"HIGH\", \"owner\": \"admin\"}</textarea>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testCreateProject()\">Test Create Project</button>\n");
      out.write("                        <div id=\"createProjectResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Files API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">📁</span>Files API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>List Files</h3>\n");
      out.write("                    <p>Get uploaded files with filtering</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/files</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Query Parameters:</label>\n");
      out.write("                            <input type=\"text\" id=\"filesQuery\" placeholder=\"category=image&uploadedBy=admin\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testListFiles()\">Test List Files</button>\n");
      out.write("                        <div id=\"filesResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Upload File</h3>\n");
      out.write("                    <p>Upload new file (multipart/form-data)</p>\n");
      out.write("                    <span class=\"method-tag method-post\">POST</span>\n");
      out.write("                    <code>/api/files/upload</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>File:</label>\n");
      out.write("                            <input type=\"file\" id=\"fileUpload\" />\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Category:</label>\n");
      out.write("                            <select id=\"fileCategory\">\n");
      out.write("                                <option value=\"document\">Document</option>\n");
      out.write("                                <option value=\"image\">Image</option>\n");
      out.write("                                <option value=\"general\">General</option>\n");
      out.write("                            </select>\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-warning\" onclick=\"testFileUpload()\">Test Upload</button>\n");
      out.write("                        <div id=\"fileUploadResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>File Info</h3>\n");
      out.write("                    <p>Get file information</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/files/info/{id}</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>File ID:</label>\n");
      out.write("                            <input type=\"text\" id=\"fileInfoId\" value=\"1\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testFileInfo()\">Test File Info</button>\n");
      out.write("                        <div id=\"fileInfoResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Analytics API -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">📊</span>Analytics API</h2>\n");
      out.write("            <div class=\"api-grid\">\n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Overview Dashboard</h3>\n");
      out.write("                    <p>Get comprehensive analytics overview</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/analytics</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testAnalyticsOverview()\">Test Overview</button>\n");
      out.write("                        <div id=\"analyticsOverviewResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>API Usage Stats</h3>\n");
      out.write("                    <p>Get API usage statistics</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/analytics/api-usage</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>Query Parameters:</label>\n");
      out.write("                            <input type=\"text\" id=\"apiUsageQuery\" placeholder=\"timeRange=week&endpoint=/api/tasks\" />\n");
      out.write("                        </div>\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testApiUsage()\">Test API Usage</button>\n");
      out.write("                        <div id=\"apiUsageResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("                <div class=\"endpoint-card\">\n");
      out.write("                    <h3>Real-time Metrics</h3>\n");
      out.write("                    <p>Get live system metrics</p>\n");
      out.write("                    <span class=\"method-tag method-get\">GET</span>\n");
      out.write("                    <code>/api/analytics/real-time</code>\n");
      out.write("                    \n");
      out.write("                    <div class=\"test-form\">\n");
      out.write("                        <button class=\"btn btn-success\" onclick=\"testRealTimeMetrics()\">Test Real-time</button>\n");
      out.write("                        <div id=\"realTimeResponse\" class=\"response-area\" style=\"display:none;\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- API Features -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">✨</span>API Features</h2>\n");
      out.write("            <div class=\"feature-grid\">\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">🔐</span>Multi-Auth Support</h4>\n");
      out.write("                    <p>Bearer tokens, API keys, and session-based authentication</p>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">🌐</span>CORS Enabled</h4>\n");
      out.write("                    <p>Cross-origin requests supported with proper headers</p>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">📄</span>Comprehensive Logging</h4>\n");
      out.write("                    <p>Detailed access logs for WAF training and analysis</p>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">⚡</span>RESTful Design</h4>\n");
      out.write("                    <p>Standard HTTP methods and status codes</p>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">🔍</span>Advanced Filtering</h4>\n");
      out.write("                    <p>Search, sort, and paginate through all resources</p>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"feature-card\">\n");
      out.write("                    <h4><span class=\"emoji\">📊</span>Built-in Analytics</h4>\n");
      out.write("                    <p>Track API usage, performance, and security metrics</p>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <!-- Demo Actions -->\n");
      out.write("        <div class=\"api-section\">\n");
      out.write("            <h2><span class=\"emoji\">🎮</span>Quick Demo Actions</h2>\n");
      out.write("            <p>Generate various HTTP traffic patterns for WAF training:</p>\n");
      out.write("            <div style=\"margin-top: 20px;\">\n");
      out.write("                <button class=\"demo-btn\" onclick=\"runTrafficDemo()\">Generate Mixed Traffic</button>\n");
      out.write("                <button class=\"demo-btn\" onclick=\"runErrorDemo()\">Generate Error Patterns</button>\n");
      out.write("                <button class=\"demo-btn\" onclick=\"runAuthDemo()\">Generate Auth Patterns</button>\n");
      out.write("                <button class=\"demo-btn\" onclick=\"runFileDemo()\">Generate File Operations</button>\n");
      out.write("                <button class=\"demo-btn\" onclick=\"runAnalyticsDemo()\">Generate Analytics Calls</button>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"demoResponse\" class=\"response-area\" style=\"display:none; margin-top: 20px;\"></div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <script>\n");
      out.write("        // Base API URL\n");
      out.write("        const API_BASE = '/api';\n");
      out.write("        \n");
      out.write("        // Utility function to make API calls\n");
      out.write("        async function apiCall(method, url, body = null, headers = {}) {\n");
      out.write("            const config = {\n");
      out.write("                method: method,\n");
      out.write("                headers: {\n");
      out.write("                    'Content-Type': 'application/json',\n");
      out.write("                    ...headers\n");
      out.write("                }\n");
      out.write("            };\n");
      out.write("            \n");
      out.write("            if (body) {\n");
      out.write("                config.body = body instanceof FormData ? body : JSON.stringify(body);\n");
      out.write("                if (body instanceof FormData) {\n");
      out.write("                    delete config.headers['Content-Type'];\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            try {\n");
      out.write("                const response = await fetch(url, config);\n");
      out.write("                const responseText = await response.text();\n");
      out.write("                \n");
      out.write("                return {\n");
      out.write("                    status: response.status,\n");
      out.write("                    statusText: response.statusText,\n");
      out.write("                    data: responseText ? JSON.parse(responseText) : null\n");
      out.write("                };\n");
      out.write("            } catch (error) {\n");
      out.write("                return {\n");
      out.write("                    status: 0,\n");
      out.write("                    statusText: 'Network Error',\n");
      out.write("                    data: { error: error.message }\n");
      out.write("                };\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Display response in UI\n");
      out.write("        function displayResponse(elementId, response) {\n");
      out.write("            const element = document.getElementById(elementId);\n");
      out.write("            element.style.display = 'block';\n");
      out.write("            element.textContent = `Status: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.statusText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n\\\\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${JSON.stringify(response.data, null, 2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Authentication tests\n");
      out.write("        async function testLogin() {\n");
      out.write("            const body = JSON.parse(document.getElementById('loginBody').value);\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/auth/login`, body);\n");
      out.write("            displayResponse('loginResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testRegister() {\n");
      out.write("            const body = JSON.parse(document.getElementById('registerBody').value);\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/auth/register`, body);\n");
      out.write("            displayResponse('registerResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testValidate() {\n");
      out.write("            const token = document.getElementById('validateToken').value;\n");
      out.write("            const headers = token ? { 'Authorization': token } : {};\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/auth/validate`, null, headers);\n");
      out.write("            displayResponse('validateResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Tasks tests\n");
      out.write("        async function testListTasks() {\n");
      out.write("            const query = document.getElementById('tasksQuery').value;\n");
      out.write("            const url = query ? `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/tasks?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("` : `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/tasks`;\n");
      out.write("            const response = await apiCall('GET', url);\n");
      out.write("            displayResponse('tasksResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testCreateTask() {\n");
      out.write("            const body = JSON.parse(document.getElementById('createTaskBody').value);\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/tasks`, body);\n");
      out.write("            displayResponse('createTaskResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testUpdateTask() {\n");
      out.write("            const taskId = document.getElementById('updateTaskId').value;\n");
      out.write("            const body = JSON.parse(document.getElementById('updateTaskBody').value);\n");
      out.write("            const response = await apiCall('PUT', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/tasks/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${taskId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`, body);\n");
      out.write("            displayResponse('updateTaskResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Users tests\n");
      out.write("        async function testListUsers() {\n");
      out.write("            const query = document.getElementById('usersQuery').value;\n");
      out.write("            const url = query ? `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("` : `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users`;\n");
      out.write("            const response = await apiCall('GET', url);\n");
      out.write("            displayResponse('usersResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testCreateUser() {\n");
      out.write("            const body = JSON.parse(document.getElementById('createUserBody').value);\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users`, body);\n");
      out.write("            displayResponse('createUserResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testGetUser() {\n");
      out.write("            const userId = document.getElementById('getUserId').value;\n");
      out.write("            const response = await apiCall('GET', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/users/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\n");
      out.write("            displayResponse('getUserResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Projects tests\n");
      out.write("        async function testListProjects() {\n");
      out.write("            const query = document.getElementById('projectsQuery').value;\n");
      out.write("            const url = query ? `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projects?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("` : `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projects`;\n");
      out.write("            const response = await apiCall('GET', url);\n");
      out.write("            displayResponse('projectsResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testCreateProject() {\n");
      out.write("            const body = JSON.parse(document.getElementById('createProjectBody').value);\n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/projects`, body);\n");
      out.write("            displayResponse('createProjectResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Files tests\n");
      out.write("        async function testListFiles() {\n");
      out.write("            const query = document.getElementById('filesQuery').value;\n");
      out.write("            const url = query ? `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/files?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("` : `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/files`;\n");
      out.write("            const response = await apiCall('GET', url);\n");
      out.write("            displayResponse('filesResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testFileUpload() {\n");
      out.write("            const fileInput = document.getElementById('fileUpload');\n");
      out.write("            const category = document.getElementById('fileCategory').value;\n");
      out.write("            \n");
      out.write("            if (!fileInput.files[0]) {\n");
      out.write("                alert('Please select a file to upload');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const formData = new FormData();\n");
      out.write("            formData.append('file', fileInput.files[0]);\n");
      out.write("            formData.append('category', category);\n");
      out.write("            formData.append('uploadedBy', 'demo-user');\n");
      out.write("            \n");
      out.write("            const response = await apiCall('POST', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/files/upload`, formData);\n");
      out.write("            displayResponse('fileUploadResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testFileInfo() {\n");
      out.write("            const fileId = document.getElementById('fileInfoId').value;\n");
      out.write("            const response = await apiCall('GET', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/files/info/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fileId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\n");
      out.write("            displayResponse('fileInfoResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Analytics tests\n");
      out.write("        async function testAnalyticsOverview() {\n");
      out.write("            const response = await apiCall('GET', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/analytics`);\n");
      out.write("            displayResponse('analyticsOverviewResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testApiUsage() {\n");
      out.write("            const query = document.getElementById('apiUsageQuery').value;\n");
      out.write("            const url = query ? `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/analytics/api-usage?");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${query}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("` : `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/analytics/api-usage`;\n");
      out.write("            const response = await apiCall('GET', url);\n");
      out.write("            displayResponse('apiUsageResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function testRealTimeMetrics() {\n");
      out.write("            const response = await apiCall('GET', `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${API_BASE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/analytics/real-time`);\n");
      out.write("            displayResponse('realTimeResponse', response);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Demo traffic generators\n");
      out.write("        async function runTrafficDemo() {\n");
      out.write("            const demoElement = document.getElementById('demoResponse');\n");
      out.write("            demoElement.style.display = 'block';\n");
      out.write("            demoElement.textContent = 'Generating mixed traffic patterns...\\\\n\\\\n';\n");
      out.write("            \n");
      out.write("            const endpoints = [\n");
      out.write("                { method: 'GET', url: '/api/tasks' },\n");
      out.write("                { method: 'GET', url: '/api/users' },\n");
      out.write("                { method: 'GET', url: '/api/projects' },\n");
      out.write("                { method: 'POST', url: '/api/auth/login', body: {username: 'admin', password: 'admin123'} },\n");
      out.write("                { method: 'GET', url: '/api/analytics' },\n");
      out.write("                { method: 'GET', url: '/api/files' }\n");
      out.write("            ];\n");
      out.write("            \n");
      out.write("            for (let endpoint of endpoints) {\n");
      out.write("                const response = await apiCall(endpoint.method, endpoint.url, endpoint.body);\n");
      out.write("                demoElement.textContent += `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n`;\n");
      out.write("                await new Promise(resolve => setTimeout(resolve, 500)); // Wait 500ms between requests\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function runErrorDemo() {\n");
      out.write("            const demoElement = document.getElementById('demoResponse');\n");
      out.write("            demoElement.style.display = 'block';\n");
      out.write("            demoElement.textContent = 'Generating error patterns...\\\\n\\\\n';\n");
      out.write("            \n");
      out.write("            const errorEndpoints = [\n");
      out.write("                { method: 'GET', url: '/api/tasks/999999' }, // 404\n");
      out.write("                { method: 'POST', url: '/api/auth/login', body: {username: 'invalid', password: 'wrong'} }, // 401\n");
      out.write("                { method: 'POST', url: '/api/users', body: {username: 'admin'} }, // 400 - missing fields\n");
      out.write("                { method: 'PUT', url: '/api/projects/999999', body: {name: 'test'} }, // 404\n");
      out.write("                { method: 'DELETE', url: '/api/files/999999' } // 404\n");
      out.write("            ];\n");
      out.write("            \n");
      out.write("            for (let endpoint of errorEndpoints) {\n");
      out.write("                const response = await apiCall(endpoint.method, endpoint.url, endpoint.body);\n");
      out.write("                demoElement.textContent += `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n`;\n");
      out.write("                await new Promise(resolve => setTimeout(resolve, 300));\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function runAuthDemo() {\n");
      out.write("            const demoElement = document.getElementById('demoResponse');\n");
      out.write("            demoElement.style.display = 'block';\n");
      out.write("            demoElement.textContent = 'Generating authentication patterns...\\\\n\\\\n';\n");
      out.write("            \n");
      out.write("            const authPatterns = [\n");
      out.write("                { method: 'POST', url: '/api/auth/login', body: {username: 'admin', password: 'admin123'} },\n");
      out.write("                { method: 'POST', url: '/api/auth/validate', headers: {'X-API-Key': 'demo-api-key-admin'} },\n");
      out.write("                { method: 'GET', url: '/api/auth/profile', headers: {'Authorization': 'Bearer token_admin_123456'} },\n");
      out.write("                { method: 'POST', url: '/api/auth/logout' },\n");
      out.write("                { method: 'POST', url: '/api/auth/refresh', headers: {'Authorization': 'Bearer token_admin_123456'} }\n");
      out.write("            ];\n");
      out.write("            \n");
      out.write("            for (let pattern of authPatterns) {\n");
      out.write("                const response = await apiCall(pattern.method, pattern.url, pattern.body, pattern.headers);\n");
      out.write("                demoElement.textContent += `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pattern.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pattern.url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n`;\n");
      out.write("                await new Promise(resolve => setTimeout(resolve, 400));\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function runFileDemo() {\n");
      out.write("            const demoElement = document.getElementById('demoResponse');\n");
      out.write("            demoElement.style.display = 'block';\n");
      out.write("            demoElement.textContent = 'Generating file operation patterns...\\\\n\\\\n';\n");
      out.write("            \n");
      out.write("            const fileOperations = [\n");
      out.write("                { method: 'GET', url: '/api/files' },\n");
      out.write("                { method: 'GET', url: '/api/files?category=image' },\n");
      out.write("                { method: 'GET', url: '/api/files/info/1' },\n");
      out.write("                { method: 'GET', url: '/api/files/download/1' },\n");
      out.write("                { method: 'DELETE', url: '/api/files/999' } // 404\n");
      out.write("            ];\n");
      out.write("            \n");
      out.write("            for (let operation of fileOperations) {\n");
      out.write("                const response = await apiCall(operation.method, operation.url);\n");
      out.write("                demoElement.textContent += `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${operation.url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n`;\n");
      out.write("                await new Promise(resolve => setTimeout(resolve, 350));\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        async function runAnalyticsDemo() {\n");
      out.write("            const demoElement = document.getElementById('demoResponse');\n");
      out.write("            demoElement.style.display = 'block';\n");
      out.write("            demoElement.textContent = 'Generating analytics call patterns...\\\\n\\\\n';\n");
      out.write("            \n");
      out.write("            const analyticsEndpoints = [\n");
      out.write("                { method: 'GET', url: '/api/analytics' },\n");
      out.write("                { method: 'GET', url: '/api/analytics/api-usage?timeRange=week' },\n");
      out.write("                { method: 'GET', url: '/api/analytics/users' },\n");
      out.write("                { method: 'GET', url: '/api/analytics/performance' },\n");
      out.write("                { method: 'GET', url: '/api/analytics/security' },\n");
      out.write("                { method: 'GET', url: '/api/analytics/real-time' },\n");
      out.write("                { method: 'POST', url: '/api/analytics/report', body: {type: 'comprehensive', timeRange: 'week'} }\n");
      out.write("            ];\n");
      out.write("            \n");
      out.write("            for (let endpoint of analyticsEndpoints) {\n");
      out.write("                const response = await apiCall(endpoint.method, endpoint.url, endpoint.body);\n");
      out.write("                demoElement.textContent += `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${endpoint.url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" -> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${response.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\\\n`;\n");
      out.write("                await new Promise(resolve => setTimeout(resolve, 600));\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
